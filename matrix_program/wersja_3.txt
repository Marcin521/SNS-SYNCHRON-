/*
 * Pierwszy.c
 *
 * Created: 20.10.2021 11:33:27
 * Author : marcin
 */
#define F_CPU 16000000UL
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>


//	#define W1_ON PORTA &=~(1<<4) //zaświecenie cyfry1 na PC0
//	#define W1_OFF PORTA |=(1<<4) //zgaszenie cyfry1 na PC0

	#define P_F0    !(PIND&(1<<0))
	#define P_F1    !(PIND&(1<<3))
	#define P_F2    !(PIND&(1<<6))

uint8_t l =0;
uint8_t status=0;
uint8_t s;
int predkosc = 2;
int spead=2;

char a_p[8]={
		1, 2, 4, 8, 16, 32, 64, 128};



char a_n[]=
		{0,0,0,0,0,0,0,0,0,0,0,
				0x00,0xc3,0xc3,0xff,0xff,0xc3,0xc3,0x00,0,//I
				0x1c,0x3e,0x7e,0xfc,0xfc,0x7e,0x3e,0x1c,0,//serce

				0x00,0x1e,0x3f,0x33,0x33,0xff,0xff,0x00,0,//P
				0xff,0xff,0xc0,0xf8,0xf8,0xc0,0xff,0xff,0, //W
				0x00,0x8e,0xdf,0x73,0x33,0xff,0xff,0x00,0,//R
	    0,0,0,0,0,0,0,0,0,0,0,
	    };


ISR(INT0_vect)
{
    	for(;predkosc>0; predkosc--)
    	{
    		_delay_ms(200);
    	}

}

void init()
{
	DDRA = 0xFF;
	DDRC = 0xFF;
	DDRD=0b11000000;
	PORTD=0b11111111;

//def przerwanie
	GICR |= (1<<INT0);
	MCUCR |= (1<<ISC01)|(1<<ISC00);

	// wł przerwania
	sei();
}
int A, B;

int main(void){

//    DDRA |= 0xff; //ustawiamy na wyjsice
//    PORTA |= 0xff;//stan wysoki wyjście PA0
	init();


	 //DDRD = 0xFF;


	while(1){

		LOOP: if(P_F0) status=1;


		if(1==status)
		{
			for(int x=0;x<56;x++)
				{
					for(int a=0;a<20;a++) //20 przesunięcie
						{
		                    for (int i=0;i<8;i++)
			                    {
			                        PORTC = ~a_p[i];    //uziemienie PORTC
			                        PORTA = a_n[i+x];  //zasielanie PORTA

			                        if(P_F0){
			                        	status=0;

			                        	goto LOOP;
			                        }

			                        if(P_F1) predkosc++;

			                        if(P_F2) predkosc--;

			                        for(;predkosc>=1;predkosc--){

			                            _delay_ms(2);
			                        }

			                       _delay_ms(2);

			                        PORTC = a_p[i];     //czyszczenie

			                        //if(P_F0) status=0;
			                    }
						}
				}
		}






	}


}


//włączanie przyciskie
//wyłącznie przyciskiem
// opuźnena
//wyłączanie

