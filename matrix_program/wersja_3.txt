/*
 * Pierwszy.c
 *
 * Created: 20.10.2021 11:33:27
 * Author : marcin
 */
#define F_CPU 16000000UL
#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>


volatile int status = 0;
volatile int spead = 5;
uint8_t l =0;
uint8_t s;
int a;

char a_p[8]={1, 2, 4, 8, 16, 32, 64, 128};

char a_n[]=
		{
			0,0,0,0,0,0,0,0,0,0,0,
			0x00,0xc3,0xc3,0xff,0xff,0xc3,0xc3,0x00,0,//I
			0x1c,0x3e,0x7e,0xfc,0xfc,0x7e,0x3e,0x1c,0,//serce
			0x00,0x1e,0x3f,0x33,0x33,0xff,0xff,0x00,0,//P
			0xff,0xff,0xc0,0xf8,0xf8,0xc0,0xff,0xff,0, //W
			0x00,0x8e,0xdf,0x73,0x33,0xff,0xff,0x00,0,//R
			0,0,0,0,0,0,0,0,0,0,0,
	    };

//funkcja przewan zewnetrzych na porcie PD2
ISR(INT0_vect)
{

    status++;

    if(status > 2)
    status = 0;
}

//funkcja przewan zewnetrzych na porcie PD3
ISR(INT1_vect)//zwiekszanie predkosci
{
	if(spead<15)
	{
		spead++;
	}

}

//funkcja przewan zewnetrzych na porcie PB2
ISR(INT2_vect)
{
	PORTB ^= (1<<PB0);
	if(spead>0)
	{
		spead--;
	}
}

//deklaracja funkcji
int animacja();

void init()
{
	DDRA = 0xFF;
	DDRC = 0xFF;

	DDRB = 0xFF;
	PORTB= 0b11111111;

	DDRD=0b11000000;
	PORTD=0b11111111;

//def przerwanie
	GICR |= 1<<INT0 | 1<<INT1 | 1<<INT2;
	MCUCR |= (1<<ISC11)|(1<<ISC00);// |(1<<ISC01)|(1<<ISC00);

	// wył przerwania
	cli();
	// wł przerwania
	sei();
}


int main(void){

	init();

	while(1)
	{
		switch(status){
			case 1://włącz
				animacja();
				break;
			case 2://wyłącz
				PORTC = 0x00;
				PORTA = 0x00;
				break;
		}
	}
}

animacja()
{
	for(int x=0;x<56;x++)//liczba elementów macierzy zadeklarowanej wyrzej
	{
		for(int a=0;a<20;a++) //20 przesunięcie
		{
			for (int i=0;i<8;i++)
			{
				PORTC = ~a_p[i];    //uziemienie PORTC
				PORTA = a_n[i+x];  //zasielanie PORTA

				_delay_ms(2);

				while(spead>0) //kontrola prędkości
				{
					 spead--;
					_delay_ms(2);
				}



				PORTC = a_p[i];     //czyszczenie

			}
		}
	}
}


